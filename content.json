{"pages":[{"title":"categories","text":"","link":"/categories/index.html"}],"posts":[{"title":"Vue 面试题，内含详细讲解","text":"1、说说你对 SPA 单页面的理解，它的优缺点分别是什么？SPA（ single-page application ）仅在 Web 页面初始化时加载相应的 HTML、JavaScript 和 CSS。一旦页面加载完成，SPA 不会因为用户的操作而进行页面的重新加载或跳转；取而代之的是利用路由机制实现 HTML 内容的变换，UI 与用户的交互，避免页面的重新加载。优点：用户体验好、快，内容的改变不需要重新加载整个页面，避免了不必要的跳转和重复渲染；基于上面一点，SPA 相对对服务器压力小；前后端职责分离，架构清晰，前端进行交互逻辑，后端负责数据处理；缺点：初次加载耗时多：为实现单页 Web 应用功能及显示效果，需要在加载页面的时候将 JavaScript、CSS 统一加载，部分页面按需加载；前进后退路由管理：由于单页应用在一个页面中显示所有的内容，所以不能使用浏览器的前进后退功能，所有的页面切换需要自己建立堆栈管理；SEO 难度较大：由于所有的内容都在一个页面中动态替换显示，所以在 SEO 上其有着天然的弱势。 2、v-show 与 v-if 有什么区别？v-if 是真正的条件渲染，因为它会确保在切换过程中条件块内的事件监听器和子组件适当地被销毁和重建；也是惰性的：如果在初始渲染时条件为假，则什么也不做——直到条件第一次变为真时，才会开始渲染条件块。v-show 就简单得多——不管初始条件是什么，元素总是会被渲染，并且只是简单地基于 CSS 的 “display” 属性进行切换。所以，v-if 适用于在运行时很少改变条件，不需要频繁切换条件的场景；v-show 则适用于需要非常频繁切换条件的场景。 3、Class 与 Style 如何动态绑定？Class 可以通过对象语法和数组语法进行动态绑定：对象语法：123456&lt;div v-bind:class=&quot;{ active: isActive, &apos;text-danger&apos;: hasError }&quot;&gt;&lt;/div&gt;data: { isActive: true, hasError: false} 数组语法：123456&lt;div v-bind:class=&quot;[isActive ? activeClass : &apos;&apos;, errorClass]&quot;&gt;&lt;/div&gt;data: { activeClass: &apos;active&apos;, errorClass: &apos;text-danger&apos;} Style 也可以通过对象语法和数组语法进行动态绑定：对象语法：123456&lt;div v-bind:style=&quot;{ color: activeColor, fontSize: fontSize + &apos;px&apos; }&quot;&gt;&lt;/div&gt;data: { activeColor: &apos;red&apos;, fontSize: 30} 数组语法：12345678910&lt;div v-bind:style=&quot;[styleColor, styleSize]&quot;&gt;&lt;/div&gt;data: { styleColor: { color: &apos;red&apos; }, styleSize:{ fontSize:&apos;23px&apos; }} 4、怎样理解 Vue 的单向数据流？所有的 prop 都使得其父子 prop 之间形成了一个单向下行绑定 ：父级 prop 的更新会向下流动到子组件中，但是反过来则不行。这样会防止从子组件意外改变父级组件的状态，从而导致你的应用的数据流向难以理解。额外的，每次父级组件发生更新时，子组件中所有的 prop 都将会刷新为最新的值。这意味着你不应该在一个子组件内部改变 prop。如果你这样做了，Vue 会在浏览器的控制台中发出警告。子组件想修改时，只能通过 $emit 派发一个自定义事件，父组件接收到后，由父组件修改。有两种常见的试图改变一个 prop 的情形 :这个 prop 用来传递一个初始值；这个子组件接下来希望将其作为一个本地的 prop 数据来使用。 在这种情况下，最好定义一个本地的 data 属性并将这个 prop 用作其初始值：123456props: [&apos;initialCounter&apos;],data: function () { return { counter: this.initialCounter }} 这个 prop 以一种原始的值传入且需要进行转换。 在这种情况下，最好使用这个 prop 的值来定义一个计算属性123456props: [&apos;size&apos;],computed: { normalizedSize: function () { return this.size.trim().toLowerCase() }} 5、computed 和 watch 的区别和运用的场景？computed： 是计算属性，依赖其它属性值，并且 computed 的值有缓存，只有它依赖的属性值发生改变，下一次获取 computed 的值时才会重新计算 computed 的值；watch： 更多的是「观察」的作用，类似于某些数据的监听回调 ，每当监听的数据变化时都会执行回调进行后续操作；运用场景：当我们需要进行数值计算，并且依赖于其它数据时，应该使用 computed，因为可以利用 computed 的缓存特性，避免每次获取值时，都要重新计算；当我们需要在数据变化时执行异步或开销较大的操作时，应该使用 watch，使用 watch 选项允许我们执行异步操作 ( 访问一个 API )，限制我们执行该操作的频率，并在我们得到最终结果前，设置中间状态。这些都是计算属性无法做到的。 6、直接给一个数组项赋值，Vue 能检测到变化吗？由于 JavaScript 的限制，Vue 不能检测到以下数组的变动：当你利用索引直接设置一个数组项时，例如：vm.items[indexOfItem] = newValue当你修改数组的长度时，例如：vm.items.length = newLength为了解决第一个问题，Vue 提供了以下操作方法：123456// Vue.setVue.set(vm.items, indexOfItem, newValue)// vm.$set，Vue.set的一个别名vm.$set(vm.items, indexOfItem, newValue)// Array.prototype.splicevm.items.splice(indexOfItem, 1, newValue) 为了解决第二个问题，Vue 提供了以下操作方法：12// Array.prototype.splicevm.items.splice(newLength) 7、谈谈你对 Vue 生命周期的理解？（1）生命周期是什么？Vue 实例有一个完整的生命周期，也就是从开始创建、初始化数据、编译模版、挂载 Dom -&gt; 渲染、更新 -&gt; 渲染、卸载等一系列过程，我们称这是 Vue 的生命周期。 （2）各个生命周期的作用","link":"/2019/07/22/Vue 面试题，内含详细讲解/"},{"title":"谢宇莲的个人简历","text":"谢宇莲性 别：女联系方式：18437979252邮 箱：13208295650@163.com现居地址：四川成都出生年月：1995.12年 龄：24岁工作年限：2年 专业技能： 熟悉W3C标准和Web语义化，能熟练运用HTML5，CSS3及其新特性编写兼容主流浏览器的页面布局；2.能适当运用CSS3使页面在现代浏览器上效果更佳； 熟练运用rem单位和flex布局实现不同浏览器宽度下的整页缩放；4.熟练使用photoshop软件进行简单的图片处理，能根据图片特征保存成最优的格式；5.熟练使用原生javaScript以及常用javaScript库，如jQuery； 能运用模块化、面向对象的方式编程；7.了解http协议，能够根据http请求报文、响应报文和状态码排查问题；8.熟练运用ajax实现异步数据传递，熟悉JSON等数据交换格式； 了解如何使用node.js搭建本地server模拟接口返回数据测试ajax接口；10.能使用Bootstrap、Vue等前端样式库和框架进行开发，能够熟练运用JQuery，Bootstrap(栅格系统的响应式网页)。 工作经历：2017.5-至今 洛阳市儒墨科技有限公司 WEB前端开发工程师2017年开始实习，实习岗位是研发助理，主要负责协助研发部门进行平台开发，具体负责平台数据配置，数据库存储过程编写以及平时的数据库管理与优化。2018年年初转正为研发专员，日常工作是对公司的大数据平台进行维护，定时清理数据以及备份，以及数据接口的测试。前端方面工作主要包括：1.负责公司产品或项目WEB前端开发；2.根据产品需求和UI效果利用VScode编程软件进行标准网页制作；3.负责JS逻辑设计与开发，JQuery特效编写以及使用插件实现特效；4.解决主流浏览器兼容性问题，对网站用户体验性能进行优化；5.完成产品前端展示鲜果和交互功能；6.负责代码的功能测试以及反馈，按照项目经理要求完成好每一项工作。 教育背景：2014.9-2018.6 洛阳师范学院 本科(二本) 技能证书：大学英语四/六级(CET-4/6) 机动车驾驶证 计算机二级证书管理学学位证 互联网项目创新创业大赛校级一等奖 HTML5前端开发工程师Web全栈研发工程师 企业级Web应用研发工程师 JS开发工程师Web应用架构工程师 混合APP高级开发工程师 移动端Web开发工程师前端Web技术工程师 服务端运维工程师 高级运维工程师 自我评价:1.对前端技术具有浓厚的兴趣，喜欢逛CSDN，博客园等技术论坛；2.具备良好的审美能力，有良好的代码编程习惯；3.学习适应能力强，愿意不断学习新知识丰富自己；4.抗压能力强，有信心在不同的工作强度下进行开发工作；5.性格随和，具有良好的团队合作精神。","link":"/2019/09/06/谢宇莲的个人简历/"},{"title":"常用功能（一），购物车功能（jquery,实现单选，全选，小计，总计，删除）","text":"以下是一个简单的购物车功能的demo，在接下来的博客里，我会陆续写到我们经常会用到的各种功能哟！HTML:123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118&lt;!-- 利用table标签简单创建样式 --&gt; &lt;table&gt; &lt;thead&gt; &lt;tr&gt; &lt;th&gt; &lt;input class=\"all_ck\" type=\"checkbox\"&gt;全选&lt;/th&gt; &lt;th&gt;商品&lt;/th&gt; &lt;th&gt;单价&lt;/th&gt; &lt;th&gt;数量&lt;/th&gt; &lt;th&gt;小计&lt;/th&gt; &lt;th&gt;操作&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td class=\"td_d\"&gt; &lt;input class=\"ck_box\" type=\"checkbox\"&gt; &lt;/td&gt; &lt;td class=\"goods\"&gt; &lt;img src=\"img/2.jpg\" align=\"left\"&gt; &lt;span&gt;三只松鼠-碧根果210g&lt;/span&gt; &lt;/td&gt; &lt;td class=\"td_d price\"&gt;￥38.90&lt;/td&gt; &lt;td class=\"td_d\"&gt; &lt;button class=\"minus\"&gt;-&lt;/button&gt; &lt;input class=\"num\" value=\"1\" type=\"text\"&gt; &lt;button class=\"add\"&gt;+&lt;/button&gt; &lt;/td&gt; &lt;td class=\"td_d smallprice\"&gt;￥38.90&lt;/td&gt; &lt;td class=\"td_d\"&gt; &lt;button class=\"delet\"&gt;删除&lt;/button&gt; &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td class=\"td_d\"&gt; &lt;input class=\"ck_box\" type=\"checkbox\"&gt; &lt;/td&gt; &lt;td class=\"goods\"&gt; &lt;img src=\"img/2.jpg\" align=\"left\"&gt; &lt;span&gt;三只松鼠-碧根果210g&lt;/span&gt; &lt;/td&gt; &lt;td class=\"td_d price\"&gt;￥38.90&lt;/td&gt; &lt;td class=\"td_d\"&gt; &lt;button class=\"minus\"&gt;-&lt;/button&gt; &lt;input class=\"num\" value=\"1\" type=\"text\"&gt; &lt;button class=\"add\"&gt;+&lt;/button&gt; &lt;/td&gt; &lt;td class=\"td_d smallprice\"&gt;￥38.90&lt;/td&gt; &lt;td class=\"td_d\"&gt; &lt;button class=\"delet\"&gt;删除&lt;/button&gt; &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td class=\"td_d\"&gt; &lt;input class=\"ck_box\" type=\"checkbox\"&gt; &lt;/td&gt; &lt;td class=\"goods\"&gt; &lt;img src=\"img/2.jpg\" align=\"left\"&gt; &lt;span&gt;三只松鼠-碧根果210g&lt;/span&gt; &lt;/td&gt; &lt;td class=\"td_d price\"&gt;￥38.90&lt;/td&gt; &lt;td class=\"td_d\"&gt; &lt;button class=\"minus\"&gt;-&lt;/button&gt; &lt;input class=\"num\" value=\"1\" type=\"text\"&gt; &lt;button class=\"add\"&gt;+&lt;/button&gt; &lt;/td&gt; &lt;td class=\"td_d smallprice\"&gt;￥38.90&lt;/td&gt; &lt;td class=\"td_d\"&gt; &lt;button class=\"delet\"&gt;删除&lt;/button&gt; &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td class=\"td_d\"&gt; &lt;input class=\"ck_box\" type=\"checkbox\"&gt; &lt;/td&gt; &lt;td class=\"goods\"&gt; &lt;img src=\"img/2.jpg\" align=\"left\"&gt; &lt;span&gt;三只松鼠-碧根果210g&lt;/span&gt; &lt;/td&gt; &lt;td class=\"td_d price\"&gt;￥38.90&lt;/td&gt; &lt;td class=\"td_d\"&gt; &lt;button class=\"minus\"&gt;-&lt;/button&gt; &lt;input class=\"num\" value=\"1\" type=\"text\"&gt; &lt;button class=\"add\"&gt;+&lt;/button&gt; &lt;/td&gt; &lt;td class=\"td_d smallprice\"&gt;￥38.90&lt;/td&gt; &lt;td class=\"td_d\"&gt; &lt;button class=\"delet\"&gt;删除&lt;/button&gt; &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td class=\"td_d\"&gt; &lt;input class=\"ck_box\" type=\"checkbox\"&gt; &lt;/td&gt; &lt;td class=\"goods\"&gt; &lt;img src=\"img/2.jpg\" align=\"left\"&gt; &lt;span&gt;三只松鼠-碧根果210g&lt;/span&gt; &lt;/td&gt; &lt;td class=\"td_d price\"&gt;￥38.90&lt;/td&gt; &lt;td class=\"td_d\"&gt; &lt;button class=\"minus\"&gt;-&lt;/button&gt; &lt;input class=\"num\" value=\"1\" type=\"text\"&gt; &lt;button class=\"add\"&gt;+&lt;/button&gt; &lt;/td&gt; &lt;td class=\"td_d smallprice\"&gt;￥38.90&lt;/td&gt; &lt;td class=\"td_d\"&gt; &lt;button class=\"delet\"&gt;删除&lt;/button&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;tfoot&gt; &lt;tr&gt; &lt;td&gt;总计&lt;/td&gt; &lt;td colspan=\"5\" class=\"totalPrice\"&gt;￥0.00&lt;/td&gt; &lt;/tr&gt; &lt;/tfoot&gt; &lt;/table&gt; Style:123456789101112131415161718192021222324252627282930313233343536373839404142table { border-collapse: collapse; } table td { vertical-align: middle; text-align: center; } thead { border: 1px solid black; } thead&gt;tr&gt;th { border: 1px solid black; padding: 5px 20px; } tbody&gt;tr&gt;td { border: 1px solid black; padding: 5px 20px; } input[class=\"num\"] { width: 24px; text-align: center; } td[class=\"goods\"]&gt;img { width: 70px; } td[class=\"goods\"]&gt;span { vertical-align: middle; display: inline-block; transform: translate(5px, 29px) } tfoot td { border: 1px solid black; font-weight: 700 } JavaScript:12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576//首先实现全选和单选功能 //全选功能首先要判断是否具有checked属性；在jquery中设置或返回被选择元素属性有两种方法attr()和prop(); //需要注意的是attr()并不能用来检测checked是否被选中，他会返回undefined值，即并不能使用attr()方法获取checked属性；那么这里只能用prop()属性获取checked属性，但是注意，所返回的并不是checked/null,而true/false，所以在判断/设置单选框是否被选中时也需要用true/false； $(\".all_ck\").click(function () { //判断是否选中 if ($(this).prop(\"checked\")) { //true $(\".ck_box\").prop({ //隐式迭代 链式操作 checked: true }).parents(\"tr\").css(\"backgroundColor\", \"grey\"); } else { $(\".ck_box\").prop({ //隐式迭代 链式操作 checked: false }).parents(\"tr\").css(\"backgroundColor\", \"\"); } }); //单选 var trueArr = [] $(\".ck_box\").click(function () { var flag = $(this).prop(\"checked\") var CL = $(\".ck_box\").length;//主要是要判断列表长度和被选中的单选框长度是否相等，如果相等就表示全选了 var CH = $(\".ck_box:checked\").length if (CL == CH) { $(\".all_ck\").prop(\"checked\", true) } else { $(\".all_ck\").prop(\"checked\", false) } totalPrice(); }) //三、数量事件：加减按钮的事件和输入数量的事件 //1.加减事件和js的一样，只是这里添加了输入数量的事件，注意需要判读输入的值必须是数字不能是字符。可以用失焦blur()方法实现，也可以用按键事件，这里使用了keypress()和keyup();(按下、抬起事件) //注意：获取输入框value值使用的是val()方法 //数量 $(\".minus\").each(function () { $(this).click(function () { var number = $(this).siblings(\".num\").val(); var price = $(this).parent().siblings(\".price\").html().slice(1) if (number &gt;= 1) { number--; } else { number = 0 } $(this).siblings(\".num\").val(number &lt; 1 &amp;&amp; number &gt;= 0 ? 0 : number); $(this).parent().siblings(\".smallprice\").html(\"￥\" + (price * number).toFixed(2)) totalPrice(); }) }); $(\".add\").each(function () { $(this).click(function () { var number = $(this).siblings(\".num\").val(); var price = $(this).parent().siblings(\".price\").html().slice(1) number++; $(this).siblings(\".num\").val(number); $(this).parent().siblings(\".smallprice\").html(\"￥\" + (price * number).toFixed(2)) totalPrice() }) }); //总计 function totalPrice() { var totalPrice = 0 var a = 0 //总计等于每个被勾选的小计加起来的和 $(\".ck_box\").each(function () { if (this.checked == true) { a = $(this).parent().next().next().next().next().html().slice(1) totalPrice += Number(a) } }) $(\".totalPrice\").html(\"￥\" + totalPrice.toFixed(2)) } //删除 $(\".delet\").click(function () { $(this).parent().parent().remove() })","link":"/2019/09/01/购物车功能（jquery,实现单选，全选，小计，总计，删除）/"},{"title":"一个简单的jquery轮播图","text":"Html：1234567891011121314151617181920&lt;div class=\"slideBox\"&gt; &lt;ul&gt; &lt;li&gt;&lt;img src=\"image/Lslide3.jpg\" alt=\"\" width=\"300\" height=\"480\"/&gt;&lt;/li&gt; &lt;li&gt;&lt;img src=\"image/Lslide4.jpg\" alt=\"\" width=\"300\" height=\"480\"/&gt;&lt;/li&gt; &lt;li&gt;&lt;img src=\"image/Lslide5.jpg\" alt=\"\" width=\"300\" height=\"480\"/&gt;&lt;/li&gt; &lt;li&gt;&lt;img src=\"image/Lslide6.jpg\" alt=\"\" width=\"300\" height=\"480\"/&gt;&lt;/li&gt; &lt;li&gt;&lt;img src=\"image/Lslide2.jpg\" alt=\"\" width=\"300\" height=\"480\"/&gt;&lt;/li&gt; &lt;li&gt;&lt;img src=\"image/Lslide1.jpg\" alt=\"\" width=\"300\" height=\"480\"/&gt;&lt;/li&gt; &lt;/ul&gt; &lt;div class=\"spanBox\"&gt; &lt;span class=\"active\"&gt;q&lt;/span&gt; &lt;span&gt;a&lt;/span&gt; &lt;span&gt;z&lt;/span&gt; &lt;span&gt;w&lt;/span&gt; &lt;span&gt;s&lt;/span&gt; &lt;span&gt;x&lt;/span&gt; &lt;/div&gt; &lt;div class=\"prev\"&gt;&lt;img src=\"image/left_arrow.jpg\" width=\"15\" height=\"50\" alt=\"\"/&gt;&lt;/div&gt; &lt;div class=\"next\"&gt;&lt;img src=\"image/right_arrow.jpg\" width=\"15\" height=\"50\" alt=\"\"/&gt;&lt;/div&gt;&lt;/div&gt; 上面是html代码，代码的结构比较简单，ul标签是要左右移动的，所以怎么设置position属性？，然后span标签是提供索引和下标控制符，绑定动画的。prev和next类名的div标签是提供左右按钮。 CSS:123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869*{ padding:0px; border:0px; margin:0px;}ul { list-style:none;}.slideBox { margin:50px auto; width:300px; height:480px; box-shadow:2px 2px 10px #C38DD4; border-radius:20px; position:relative; overflow:hidden;}.slideBox ul { position:relative; width:2000px;}.slideBox ul li { float:left; width:300px; height:480px; position:relative; }.spanBox { position:absolute; width:300px; height:20px; bottom:10px; left:80px;}.spanBox span { width:18px; height:18px; margin-left:5px; background-color:rgba(201,178,207,1.00); float:left; line-height:16px; text-align:center; text-shadow:2px 2px 2px #C5EBF0; font-family:cabin-sketch; font-size:15px;}.slideBox .spanBox .active { background-color:rgba(155,83,244,0.79); border:solid 1px #BEEBEC; border-radius:4px;}.prev { position:absolute; left:0px; top:320px; float:left; border-left:solid 1px rgba(251,245,246,1.00); opacity:0.5;}.next { width:15px; height:50px; position:absolute; right:0px; top:320px; float:right; border-right:solid 1px rgba(245,237,237,1.00); opacity:0.5} Jquery:1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950$(document).ready(function(){ var slideBox = $(\".slideBox\"); var ul = slideBox.find(\"ul\"); var oneWidth = slideBox.find(\"ul li\").eq(0).width(); var number = slideBox.find(\".spanBox span\");//注意分号 和逗号的用法 var timer = null; var sw = 0; //每个span绑定click事件，完成切换颜色和动画，以及读取参数值 number.on(\"click\",function (){ $(this).addClass(\"active\").siblings(\"span\").removeClass(\"active\"); sw=$(this).index(); ul.animate({ \"right\":oneWidth*sw,//ul标签的动画为向左移动； }); }); //左右按钮的控制效果 $(\".next\").stop(true,true).click(function (){ sw++; if(sw==number.length){sw=0}; number.eq(sw).trigger(\"click\"); }); $(\".prev\").stop(true,true).click(function (){ sw--; if(sw==number.length){sw=0}; number.eq(sw).trigger(\"click\"); }); //定时器的使用，自动开始 timer = setInterval(function (){ sw++; if(sw==number.length){sw=0}; number.eq(sw).trigger(\"click\"); },2000); //hover事件完成悬停和，左右图标的动画效果 slideBox.hover(function(){ $(\".next,.prev\").animate({ \"opacity\":1, },200); clearInterval(timer); },function(){ $(\".next,.prev\").animate({ \"opacity\":0.5, },500); timer = setInterval(function (){ sw++; if(sw==number.length){sw=0}; number.eq(sw).trigger(\"click\"); },2000); }) })","link":"/2019/05/22/一个简单的Jquery轮播图/"}],"tags":[{"name":"Html","slug":"Html","link":"/tags/Html/"},{"name":"CSS","slug":"CSS","link":"/tags/CSS/"},{"name":"Vue","slug":"Vue","link":"/tags/Vue/"},{"name":"个人简历","slug":"个人简历","link":"/tags/个人简历/"},{"name":"Jquery","slug":"Jquery","link":"/tags/Jquery/"}],"categories":[{"name":"前端开发","slug":"前端开发","link":"/categories/前端开发/"},{"name":"个人简历","slug":"个人简历","link":"/categories/个人简历/"}]}