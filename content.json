{"meta":{"title":"Cherry的个人博客","subtitle":null,"description":null,"author":"Cherry Xie","url":"http://yoursite.com","root":"/"},"pages":[{"title":"categories","date":"2019-05-22T15:33:59.000Z","updated":"2019-05-22T15:33:59.316Z","comments":true,"path":"categories/index.html","permalink":"http://yoursite.com/categories/index.html","excerpt":"","text":""}],"posts":[{"title":"3","slug":"3","date":"2019-09-06T08:45:00.000Z","updated":"2019-09-06T08:48:44.714Z","comments":true,"path":"2019/09/06/3/","link":"","permalink":"http://yoursite.com/2019/09/06/3/","excerpt":"","text":"谢宇莲性 别：女联系方式：18437979252邮 箱：13208295650@163.com现居地址：四川成都出生年月：1995.12年 龄：24岁工作年限：2年 专业技能： 熟悉W3C标准和Web语义化，能熟练运用HTML5，CSS3及其新特性编写兼容主流浏览器的页面布局；2.能适当运用CSS3使页面在现代浏览器上效果更佳； 熟练运用rem单位和flex布局实现不同浏览器宽度下的整页缩放；4.熟练使用photoshop软件进行简单的图片处理，能根据图片特征保存成最优的格式；5.熟练使用原生javaScript以及常用javaScript库，如jQuery； 能运用模块化、面向对象的方式编程；7.了解http协议，能够根据http请求报文、响应报文和状态码排查问题；8.熟练运用ajax实现异步数据传递，熟悉JSON等数据交换格式； 了解如何使用node.js搭建本地server模拟接口返回数据测试ajax接口；10.能使用Bootstrap、Vue等前端样式库和框架进行开发，能够熟练运用JQuery，Bootstrap(栅格系统的响应式网页)。 工作经历：2017.5-至今 洛阳市儒墨科技有限公司 WEB前端开发工程师2017年开始实习，实习岗位是研发助理，主要负责协助研发部门进行平台开发，具体负责平台数据配置，数据库存储过程编写以及平时的数据库管理与优化。2018年年初转正为研发专员，日常工作是对公司的大数据平台进行维护，定时清理数据以及备份，以及数据接口的测试。前端方面工作主要包括：1.负责公司产品或项目WEB前端开发；2.根据产品需求和UI效果利用VScode编程软件进行标准网页制作；3.负责JS逻辑设计与开发，JQuery特效编写以及使用插件实现特效；4.解决主流浏览器兼容性问题，对网站用户体验性能进行优化；5.完成产品前端展示鲜果和交互功能；6.负责代码的功能测试以及反馈，按照项目经理要求完成好每一项工作。 教育背景：2014.9-2018.6 洛阳师范学院 本科(二本) 技能证书：大学英语四/六级(CET-4/6) 机动车驾驶证 计算机二级证书管理学学位证 互联网项目创新创业大赛校级一等奖 HTML5前端开发工程师Web全栈研发工程师 企业级Web应用研发工程师 JS开发工程师Web应用架构工程师 混合APP高级开发工程师 移动端Web开发工程师前端Web技术工程师 服务端运维工程师 高级运维工程师 自我评价:1.对前端技术具有浓厚的兴趣，喜欢逛CSDN，博客园等技术论坛；2.具备良好的审美能力，有良好的代码编程习惯；3.学习适应能力强，愿意不断学习新知识丰富自己；4.抗压能力强，有信心在不同的工作强度下进行开发工作；5.性格随和，具有良好的团队合作精神。","categories":[{"name":"个人简历","slug":"个人简历","permalink":"http://yoursite.com/categories/个人简历/"}],"tags":[{"name":"个人简历","slug":"个人简历","permalink":"http://yoursite.com/tags/个人简历/"}],"author":"Cherry Xie"},{"title":"Vue 面试题，内含详细讲解","slug":"Vue 面试题，内含详细讲解","date":"2019-07-22T15:23:00.000Z","updated":"2019-09-16T03:25:12.045Z","comments":true,"path":"2019/07/22/Vue 面试题，内含详细讲解/","link":"","permalink":"http://yoursite.com/2019/07/22/Vue 面试题，内含详细讲解/","excerpt":"","text":"1、说说你对 SPA 单页面的理解，它的优缺点分别是什么？SPA（ single-page application ）仅在 Web 页面初始化时加载相应的 HTML、JavaScript 和 CSS。一旦页面加载完成，SPA 不会因为用户的操作而进行页面的重新加载或跳转；取而代之的是利用路由机制实现 HTML 内容的变换，UI 与用户的交互，避免页面的重新加载。优点：用户体验好、快，内容的改变不需要重新加载整个页面，避免了不必要的跳转和重复渲染；基于上面一点，SPA 相对对服务器压力小；前后端职责分离，架构清晰，前端进行交互逻辑，后端负责数据处理；缺点：初次加载耗时多：为实现单页 Web 应用功能及显示效果，需要在加载页面的时候将 JavaScript、CSS 统一加载，部分页面按需加载；前进后退路由管理：由于单页应用在一个页面中显示所有的内容，所以不能使用浏览器的前进后退功能，所有的页面切换需要自己建立堆栈管理；SEO 难度较大：由于所有的内容都在一个页面中动态替换显示，所以在 SEO 上其有着天然的弱势。 2、v-show 与 v-if 有什么区别？v-if 是真正的条件渲染，因为它会确保在切换过程中条件块内的事件监听器和子组件适当地被销毁和重建；也是惰性的：如果在初始渲染时条件为假，则什么也不做——直到条件第一次变为真时，才会开始渲染条件块。v-show 就简单得多——不管初始条件是什么，元素总是会被渲染，并且只是简单地基于 CSS 的 “display” 属性进行切换。所以，v-if 适用于在运行时很少改变条件，不需要频繁切换条件的场景；v-show 则适用于需要非常频繁切换条件的场景。 3、Class 与 Style 如何动态绑定？Class 可以通过对象语法和数组语法进行动态绑定：对象语法：123456&lt;div v-bind:class=&quot;&#123; active: isActive, &apos;text-danger&apos;: hasError &#125;&quot;&gt;&lt;/div&gt;data: &#123; isActive: true, hasError: false&#125; 数组语法：123456&lt;div v-bind:class=&quot;[isActive ? activeClass : &apos;&apos;, errorClass]&quot;&gt;&lt;/div&gt;data: &#123; activeClass: &apos;active&apos;, errorClass: &apos;text-danger&apos;&#125; Style 也可以通过对象语法和数组语法进行动态绑定：对象语法：123456&lt;div v-bind:style=&quot;&#123; color: activeColor, fontSize: fontSize + &apos;px&apos; &#125;&quot;&gt;&lt;/div&gt;data: &#123; activeColor: &apos;red&apos;, fontSize: 30&#125; 数组语法：12345678910&lt;div v-bind:style=&quot;[styleColor, styleSize]&quot;&gt;&lt;/div&gt;data: &#123; styleColor: &#123; color: &apos;red&apos; &#125;, styleSize:&#123; fontSize:&apos;23px&apos; &#125;&#125; 4、怎样理解 Vue 的单向数据流？所有的 prop 都使得其父子 prop 之间形成了一个单向下行绑定 ：父级 prop 的更新会向下流动到子组件中，但是反过来则不行。这样会防止从子组件意外改变父级组件的状态，从而导致你的应用的数据流向难以理解。额外的，每次父级组件发生更新时，子组件中所有的 prop 都将会刷新为最新的值。这意味着你不应该在一个子组件内部改变 prop。如果你这样做了，Vue 会在浏览器的控制台中发出警告。子组件想修改时，只能通过 $emit 派发一个自定义事件，父组件接收到后，由父组件修改。有两种常见的试图改变一个 prop 的情形 :这个 prop 用来传递一个初始值；这个子组件接下来希望将其作为一个本地的 prop 数据来使用。 在这种情况下，最好定义一个本地的 data 属性并将这个 prop 用作其初始值：123456props: [&apos;initialCounter&apos;],data: function () &#123; return &#123; counter: this.initialCounter &#125;&#125; 这个 prop 以一种原始的值传入且需要进行转换。 在这种情况下，最好使用这个 prop 的值来定义一个计算属性123456props: [&apos;size&apos;],computed: &#123; normalizedSize: function () &#123; return this.size.trim().toLowerCase() &#125;&#125; 5、computed 和 watch 的区别和运用的场景？computed： 是计算属性，依赖其它属性值，并且 computed 的值有缓存，只有它依赖的属性值发生改变，下一次获取 computed 的值时才会重新计算 computed 的值；watch： 更多的是「观察」的作用，类似于某些数据的监听回调 ，每当监听的数据变化时都会执行回调进行后续操作；运用场景：当我们需要进行数值计算，并且依赖于其它数据时，应该使用 computed，因为可以利用 computed 的缓存特性，避免每次获取值时，都要重新计算；当我们需要在数据变化时执行异步或开销较大的操作时，应该使用 watch，使用 watch 选项允许我们执行异步操作 ( 访问一个 API )，限制我们执行该操作的频率，并在我们得到最终结果前，设置中间状态。这些都是计算属性无法做到的。","categories":[{"name":"前端开发","slug":"前端开发","permalink":"http://yoursite.com/categories/前端开发/"}],"tags":[{"name":"Html","slug":"Html","permalink":"http://yoursite.com/tags/Html/"},{"name":"CSS","slug":"CSS","permalink":"http://yoursite.com/tags/CSS/"},{"name":"Vue","slug":"Vue","permalink":"http://yoursite.com/tags/Vue/"}],"author":"Cherry Xie"},{"title":"第二篇","slug":"第二篇","date":"2019-06-02T15:23:00.000Z","updated":"2019-09-09T09:19:42.433Z","comments":true,"path":"2019/06/02/第二篇/","link":"","permalink":"http://yoursite.com/2019/06/02/第二篇/","excerpt":"","text":"","categories":[{"name":"前端开发","slug":"前端开发","permalink":"http://yoursite.com/categories/前端开发/"}],"tags":[{"name":"Vue","slug":"Vue","permalink":"http://yoursite.com/tags/Vue/"}],"author":"Cherry Xie"},{"title":"第二篇","slug":"小狗","date":"2019-05-22T16:34:36.000Z","updated":"2019-05-22T16:34:36.918Z","comments":true,"path":"2019/05/23/小狗/","link":"","permalink":"http://yoursite.com/2019/05/23/小狗/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"一个简单的jquery轮播图","slug":"一个简单的Jquery轮播图","date":"2019-05-22T15:23:00.000Z","updated":"2019-09-06T04:01:23.059Z","comments":true,"path":"2019/05/22/一个简单的Jquery轮播图/","link":"","permalink":"http://yoursite.com/2019/05/22/一个简单的Jquery轮播图/","excerpt":"","text":"Html：1234567891011121314151617181920&lt;div class=\"slideBox\"&gt; &lt;ul&gt; &lt;li&gt;&lt;img src=\"image/Lslide3.jpg\" alt=\"\" width=\"300\" height=\"480\"/&gt;&lt;/li&gt; &lt;li&gt;&lt;img src=\"image/Lslide4.jpg\" alt=\"\" width=\"300\" height=\"480\"/&gt;&lt;/li&gt; &lt;li&gt;&lt;img src=\"image/Lslide5.jpg\" alt=\"\" width=\"300\" height=\"480\"/&gt;&lt;/li&gt; &lt;li&gt;&lt;img src=\"image/Lslide6.jpg\" alt=\"\" width=\"300\" height=\"480\"/&gt;&lt;/li&gt; &lt;li&gt;&lt;img src=\"image/Lslide2.jpg\" alt=\"\" width=\"300\" height=\"480\"/&gt;&lt;/li&gt; &lt;li&gt;&lt;img src=\"image/Lslide1.jpg\" alt=\"\" width=\"300\" height=\"480\"/&gt;&lt;/li&gt; &lt;/ul&gt; &lt;div class=\"spanBox\"&gt; &lt;span class=\"active\"&gt;q&lt;/span&gt; &lt;span&gt;a&lt;/span&gt; &lt;span&gt;z&lt;/span&gt; &lt;span&gt;w&lt;/span&gt; &lt;span&gt;s&lt;/span&gt; &lt;span&gt;x&lt;/span&gt; &lt;/div&gt; &lt;div class=\"prev\"&gt;&lt;img src=\"image/left_arrow.jpg\" width=\"15\" height=\"50\" alt=\"\"/&gt;&lt;/div&gt; &lt;div class=\"next\"&gt;&lt;img src=\"image/right_arrow.jpg\" width=\"15\" height=\"50\" alt=\"\"/&gt;&lt;/div&gt;&lt;/div&gt; 上面是html代码，代码的结构比较简单，ul标签是要左右移动的，所以怎么设置position属性？，然后span标签是提供索引和下标控制符，绑定动画的。prev和next类名的div标签是提供左右按钮。 CSS:123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869*&#123; padding:0px; border:0px; margin:0px;&#125;ul &#123; list-style:none;&#125;.slideBox &#123; margin:50px auto; width:300px; height:480px; box-shadow:2px 2px 10px #C38DD4; border-radius:20px; position:relative; overflow:hidden;&#125;.slideBox ul &#123; position:relative; width:2000px;&#125;.slideBox ul li &#123; float:left; width:300px; height:480px; position:relative; &#125;.spanBox &#123; position:absolute; width:300px; height:20px; bottom:10px; left:80px;&#125;.spanBox span &#123; width:18px; height:18px; margin-left:5px; background-color:rgba(201,178,207,1.00); float:left; line-height:16px; text-align:center; text-shadow:2px 2px 2px #C5EBF0; font-family:cabin-sketch; font-size:15px;&#125;.slideBox .spanBox .active &#123; background-color:rgba(155,83,244,0.79); border:solid 1px #BEEBEC; border-radius:4px;&#125;.prev &#123; position:absolute; left:0px; top:320px; float:left; border-left:solid 1px rgba(251,245,246,1.00); opacity:0.5;&#125;.next &#123; width:15px; height:50px; position:absolute; right:0px; top:320px; float:right; border-right:solid 1px rgba(245,237,237,1.00); opacity:0.5&#125; Jquery:1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950$(document).ready(function()&#123; var slideBox = $(\".slideBox\"); var ul = slideBox.find(\"ul\"); var oneWidth = slideBox.find(\"ul li\").eq(0).width(); var number = slideBox.find(\".spanBox span\");//注意分号 和逗号的用法 var timer = null; var sw = 0; //每个span绑定click事件，完成切换颜色和动画，以及读取参数值 number.on(\"click\",function ()&#123; $(this).addClass(\"active\").siblings(\"span\").removeClass(\"active\"); sw=$(this).index(); ul.animate(&#123; \"right\":oneWidth*sw,//ul标签的动画为向左移动； &#125;); &#125;); //左右按钮的控制效果 $(\".next\").stop(true,true).click(function ()&#123; sw++; if(sw==number.length)&#123;sw=0&#125;; number.eq(sw).trigger(\"click\"); &#125;); $(\".prev\").stop(true,true).click(function ()&#123; sw--; if(sw==number.length)&#123;sw=0&#125;; number.eq(sw).trigger(\"click\"); &#125;); //定时器的使用，自动开始 timer = setInterval(function ()&#123; sw++; if(sw==number.length)&#123;sw=0&#125;; number.eq(sw).trigger(\"click\"); &#125;,2000); //hover事件完成悬停和，左右图标的动画效果 slideBox.hover(function()&#123; $(\".next,.prev\").animate(&#123; \"opacity\":1, &#125;,200); clearInterval(timer); &#125;,function()&#123; $(\".next,.prev\").animate(&#123; \"opacity\":0.5, &#125;,500); timer = setInterval(function ()&#123; sw++; if(sw==number.length)&#123;sw=0&#125;; number.eq(sw).trigger(\"click\"); &#125;,2000); &#125;) &#125;)","categories":[{"name":"前端开发","slug":"前端开发","permalink":"http://yoursite.com/categories/前端开发/"}],"tags":[{"name":"Html","slug":"Html","permalink":"http://yoursite.com/tags/Html/"},{"name":"CSS","slug":"CSS","permalink":"http://yoursite.com/tags/CSS/"},{"name":"Jquery","slug":"Jquery","permalink":"http://yoursite.com/tags/Jquery/"}],"author":"Cherry Xie"}]}